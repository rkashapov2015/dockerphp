services:
  app:
    build:
      dockerfile: ./services/php/Dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./application:/var/www/application
      - ./services/php/config/local.ini:/usr/local/etc/php/conf.d/local.ini
    hostname: app
    networks:
      - app-network
  app_debug:
    build:
      context: ./services/php/debug
      dockerfile: Dockerfile
    container_name: app_debug
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app_debug
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./application:/var/www/application
      - ./services/php/config/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./services/php/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    hostname: app_debug
    networks:
      - app-network
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8000:80"
    volumes:
      - ./application:/var/www/application
      - ./services/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network
  postgres:
    image: postgres:14.1-alpine
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_DB=laravel
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '54321:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    hostname: postgres
    networks:
      - app-network
  redis:
    image: redis:latest
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    hostname: redis
    networks:
      - app-network
volumes:
  postgres_data:
  redis_data:
networks:
  app-network:
    driver: bridge
